{"version":3,"file":"4868.f4e14fe.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/console-extension/style/base.css?2087","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/tree/style/base.css?d6d2","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/tree-extension/style/base.css?8ec0","webpack://_JUPYTERLAB.CORE_OUTPUT/./tree/build/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/console-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/tree-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyter-notebook/tree/style/base.css"],"sourcesContent":["\n      import API from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../css-loader/dist/cjs.js!./base.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../css-loader/dist/cjs.js!./base.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../css-loader/dist/cjs.js!./base.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../css-loader/dist/cjs.js!./base.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../css-loader/dist/cjs.js!./base.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../css-loader/dist/cjs.js!./base.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { NotebookApp } from '@jupyter-notebook/application';\n\n// The webpack public path needs to be set before loading the CSS assets.\nimport { PageConfig } from '@jupyterlab/coreutils';\n\nimport { PluginRegistry } from '@lumino/coreutils';\n\nimport './style.js';\n\n// custom list of disabled plugins\nconst disabled = [\n  \"@jupyterlab/application-extension:dirty\",\n  \"@jupyterlab/application-extension:info\",\n  \"@jupyterlab/application-extension:layout\",\n  \"@jupyterlab/application-extension:logo\",\n  \"@jupyterlab/application-extension:main\",\n  \"@jupyterlab/application-extension:mode-switch\",\n  \"@jupyterlab/application-extension:notfound\",\n  \"@jupyterlab/application-extension:paths\",\n  \"@jupyterlab/application-extension:property-inspector\",\n  \"@jupyterlab/application-extension:shell\",\n  \"@jupyterlab/application-extension:status\",\n  \"@jupyterlab/application-extension:top-bar\",\n  \"@jupyterlab/application-extension:tree-resolver\",\n  \"@jupyterlab/apputils-extension:announcements\",\n  \"@jupyterlab/apputils-extension:kernel-status\",\n  \"@jupyterlab/apputils-extension:palette-restorer\",\n  \"@jupyterlab/apputils-extension:print\",\n  \"@jupyterlab/apputils-extension:resolver\",\n  \"@jupyterlab/apputils-extension:running-sessions-status\",\n  \"@jupyterlab/apputils-extension:splash\",\n  \"@jupyterlab/apputils-extension:workspaces\",\n  \"@jupyterlab/console-extension:kernel-status\",\n  \"@jupyterlab/docmanager-extension:download\",\n  \"@jupyterlab/docmanager-extension:path-status\",\n  \"@jupyterlab/docmanager-extension:saving-status\",\n  \"@jupyterlab/filebrowser-extension:download\",\n  \"@jupyterlab/filebrowser-extension:share-file\",\n  \"@jupyterlab/filebrowser-extension:widget\",\n  \"@jupyterlab/fileeditor-extension:editor-syntax-status\",\n  \"@jupyterlab/fileeditor-extension:language-server\",\n  \"@jupyterlab/fileeditor-extension:search\",\n  \"@jupyterlab/help-extension:about\",\n  \"@jupyterlab/help-extension:open\",\n  \"@jupyterlab/lsp-extension:plugin\",\n  \"@jupyterlab/notebook-extension:execution-indicator\",\n  \"@jupyterlab/notebook-extension:kernel-status\",\n  \"@jupyterlab/notebook-extension:language-server\",\n  \"@jupyterlab/notebook-extension:search\",\n  \"@jupyterlab/notebook-extension:toc\",\n  \"@jupyterlab/notebook-extension:update-raw-mimetype\",\n  \"@jupyterlab/services-extension:config-section-manager\",\n  \"@jupyterlab/services-extension:connection-status\",\n  \"@jupyterlab/services-extension:default-drive\",\n  \"@jupyterlab/services-extension:event-manager\",\n  \"@jupyterlab/services-extension:kernel-manager\",\n  \"@jupyterlab/services-extension:kernel-spec-manager\",\n  \"@jupyterlab/services-extension:nbconvert-manager\",\n  \"@jupyterlab/services-extension:session-manager\",\n  \"@jupyterlab/services-extension:setting-manager\",\n  \"@jupyterlab/services-extension:user-manager\",\n  \"@jupyter-notebook/application-extension:logo\",\n  \"@jupyter-notebook/application-extension:opener\",\n  \"@jupyter-notebook/application-extension:path-opener\",\n  \"@jupyter-notebook/help-extension:about\",\n  \"@jupyterlite/application-extension:lsp-connection-manager\",\n];\n\nasync function createModule(scope, module) {\n  try {\n    const factory = await window._JUPYTERLAB[scope].get(module);\n    const instance = factory();\n    instance.__scope__ = scope;\n    return instance;\n  } catch (e) {\n    console.warn(`Failed to create module: package: ${scope}; module: ${module}`);\n    throw e;\n  }\n}\n\n/**\n * The main entry point for the application.\n */\nexport async function main() {\n  const allPlugins = [];\n  const pluginsToRegister = [];\n  const federatedExtensionPromises = [];\n  const federatedMimeExtensionPromises = [];\n  const federatedStylePromises = [];\n\n  // This is all the data needed to load and activate plugins. This should be\n  // gathered by the server and put onto the initial page template.\n  const extensions = JSON.parse(\n    PageConfig.getOption('federated_extensions')\n  );\n\n  // The set of federated extension names.\n  const federatedExtensionNames = new Set();\n\n  extensions.forEach(data => {\n    if (data.extension) {\n      federatedExtensionNames.add(data.name);\n      federatedExtensionPromises.push(createModule(data.name, data.extension));\n    }\n    if (data.mimeExtension) {\n      federatedExtensionNames.add(data.name);\n      federatedMimeExtensionPromises.push(createModule(data.name, data.mimeExtension));\n    }\n    if (data.style) {\n      federatedStylePromises.push(createModule(data.name, data.style));\n    }\n  });\n\n  /**\n   * Iterate over active plugins in an extension.\n   */\n  function* activePlugins(extension) {\n    // Handle commonjs or es2015 modules\n    let exports;\n    if (extension.hasOwnProperty('__esModule')) {\n      exports = extension.default;\n    } else {\n      // CommonJS exports.\n      exports = extension;\n    }\n\n    let plugins = Array.isArray(exports) ? exports : [exports];\n    for (let plugin of plugins) {\n      if (\n        PageConfig.Extension.isDisabled(plugin.id) ||\n        disabled.includes(plugin.id) ||\n        disabled.includes(plugin.id.split(':')[0])\n      ) {\n        continue;\n      }\n      allPlugins.push({\n        ...plugin,\n        extension: extension.__scope__\n      });\n      yield plugin;\n    }\n  }\n\n  // Handle the mime extensions.\n  const mimeExtensions = [];\n  if (!federatedExtensionNames.has('@jupyterlab/javascript-extension')) {\n    try {\n      let ext = require('@jupyterlab/javascript-extension');\n      ext.__scope__ = '@jupyterlab/javascript-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/json-extension')) {\n    try {\n      let ext = require('@jupyterlab/json-extension');\n      ext.__scope__ = '@jupyterlab/json-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/mermaid-extension')) {\n    try {\n      let ext = require('@jupyterlab/mermaid-extension/lib/mime.js');\n      ext.__scope__ = '@jupyterlab/mermaid-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/vega5-extension')) {\n    try {\n      let ext = require('@jupyterlab/vega5-extension');\n      ext.__scope__ = '@jupyterlab/vega5-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlite/iframe-extension')) {\n    try {\n      let ext = require('@jupyterlite/iframe-extension');\n      ext.__scope__ = '@jupyterlite/iframe-extension';\n      for (let plugin of activePlugins(ext)) {\n        mimeExtensions.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // Add the federated mime extensions.\n  const federatedMimeExtensions = await Promise.allSettled(federatedMimeExtensionPromises);\n  federatedMimeExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        mimeExtensions.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  // Handle the standard extensions.\n  if (!federatedExtensionNames.has('@jupyterlab/application-extension')) {\n    try {\n      let ext = require('@jupyterlab/application-extension');\n      ext.__scope__ = '@jupyterlab/application-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/apputils-extension')) {\n    try {\n      let ext = require('@jupyterlab/apputils-extension');\n      ext.__scope__ = '@jupyterlab/apputils-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/cell-toolbar-extension')) {\n    try {\n      let ext = require('@jupyterlab/cell-toolbar-extension');\n      ext.__scope__ = '@jupyterlab/cell-toolbar-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/codemirror-extension')) {\n    try {\n      let ext = require('@jupyterlab/codemirror-extension');\n      ext.__scope__ = '@jupyterlab/codemirror-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/completer-extension')) {\n    try {\n      let ext = require('@jupyterlab/completer-extension');\n      ext.__scope__ = '@jupyterlab/completer-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/console-extension')) {\n    try {\n      let ext = require('@jupyterlab/console-extension');\n      ext.__scope__ = '@jupyterlab/console-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/csvviewer-extension')) {\n    try {\n      let ext = require('@jupyterlab/csvviewer-extension');\n      ext.__scope__ = '@jupyterlab/csvviewer-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/docmanager-extension')) {\n    try {\n      let ext = require('@jupyterlab/docmanager-extension');\n      ext.__scope__ = '@jupyterlab/docmanager-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/filebrowser-extension')) {\n    try {\n      let ext = require('@jupyterlab/filebrowser-extension');\n      ext.__scope__ = '@jupyterlab/filebrowser-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/fileeditor-extension')) {\n    try {\n      let ext = require('@jupyterlab/fileeditor-extension');\n      ext.__scope__ = '@jupyterlab/fileeditor-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/help-extension')) {\n    try {\n      let ext = require('@jupyterlab/help-extension');\n      ext.__scope__ = '@jupyterlab/help-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/imageviewer-extension')) {\n    try {\n      let ext = require('@jupyterlab/imageviewer-extension');\n      ext.__scope__ = '@jupyterlab/imageviewer-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/mainmenu-extension')) {\n    try {\n      let ext = require('@jupyterlab/mainmenu-extension');\n      ext.__scope__ = '@jupyterlab/mainmenu-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/mathjax-extension')) {\n    try {\n      let ext = require('@jupyterlab/mathjax-extension');\n      ext.__scope__ = '@jupyterlab/mathjax-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/mermaid-extension')) {\n    try {\n      let ext = require('@jupyterlab/mermaid-extension');\n      ext.__scope__ = '@jupyterlab/mermaid-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/metadataform-extension')) {\n    try {\n      let ext = require('@jupyterlab/metadataform-extension');\n      ext.__scope__ = '@jupyterlab/metadataform-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/notebook-extension')) {\n    try {\n      let ext = require('@jupyterlab/notebook-extension');\n      ext.__scope__ = '@jupyterlab/notebook-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/rendermime-extension')) {\n    try {\n      let ext = require('@jupyterlab/rendermime-extension');\n      ext.__scope__ = '@jupyterlab/rendermime-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/services-extension')) {\n    try {\n      let ext = require('@jupyterlab/services-extension');\n      ext.__scope__ = '@jupyterlab/services-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/settingeditor-extension')) {\n    try {\n      let ext = require('@jupyterlab/settingeditor-extension');\n      ext.__scope__ = '@jupyterlab/settingeditor-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/shortcuts-extension')) {\n    try {\n      let ext = require('@jupyterlab/shortcuts-extension');\n      ext.__scope__ = '@jupyterlab/shortcuts-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/theme-dark-extension')) {\n    try {\n      let ext = require('@jupyterlab/theme-dark-extension');\n      ext.__scope__ = '@jupyterlab/theme-dark-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/theme-dark-high-contrast-extension')) {\n    try {\n      let ext = require('@jupyterlab/theme-dark-high-contrast-extension');\n      ext.__scope__ = '@jupyterlab/theme-dark-high-contrast-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/theme-light-extension')) {\n    try {\n      let ext = require('@jupyterlab/theme-light-extension');\n      ext.__scope__ = '@jupyterlab/theme-light-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/tooltip-extension')) {\n    try {\n      let ext = require('@jupyterlab/tooltip-extension');\n      ext.__scope__ = '@jupyterlab/tooltip-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/translation-extension')) {\n    try {\n      let ext = require('@jupyterlab/translation-extension');\n      ext.__scope__ = '@jupyterlab/translation-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlab/ui-components-extension')) {\n    try {\n      let ext = require('@jupyterlab/ui-components-extension');\n      ext.__scope__ = '@jupyterlab/ui-components-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyter-notebook/application-extension')) {\n    try {\n      let ext = require('@jupyter-notebook/application-extension');\n      ext.__scope__ = '@jupyter-notebook/application-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyter-notebook/console-extension')) {\n    try {\n      let ext = require('@jupyter-notebook/console-extension');\n      ext.__scope__ = '@jupyter-notebook/console-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyter-notebook/docmanager-extension')) {\n    try {\n      let ext = require('@jupyter-notebook/docmanager-extension');\n      ext.__scope__ = '@jupyter-notebook/docmanager-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyter-notebook/help-extension')) {\n    try {\n      let ext = require('@jupyter-notebook/help-extension');\n      ext.__scope__ = '@jupyter-notebook/help-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyter-notebook/tree-extension')) {\n    try {\n      let ext = require('@jupyter-notebook/tree-extension');\n      ext.__scope__ = '@jupyter-notebook/tree-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlite/application-extension')) {\n    try {\n      let ext = require('@jupyterlite/application-extension');\n      ext.__scope__ = '@jupyterlite/application-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlite/apputils-extension')) {\n    try {\n      let ext = require('@jupyterlite/apputils-extension');\n      ext.__scope__ = '@jupyterlite/apputils-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlite/notebook-application-extension')) {\n    try {\n      let ext = require('@jupyterlite/notebook-application-extension');\n      ext.__scope__ = '@jupyterlite/notebook-application-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  if (!federatedExtensionNames.has('@jupyterlite/services-extension')) {\n    try {\n      let ext = require('@jupyterlite/services-extension');\n      ext.__scope__ = '@jupyterlite/services-extension';\n      for (let plugin of activePlugins(ext)) {\n        pluginsToRegister.push(plugin);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // Add the federated extensions.\n  const federatedExtensions = await Promise.allSettled(federatedExtensionPromises);\n  federatedExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        pluginsToRegister.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  // Load all federated component styles and log errors for any that do not\n  (await Promise.allSettled(federatedStylePromises)).filter(({status}) => status === \"rejected\").forEach(({reason}) => {\n     console.error(reason);\n    });\n\n  // 1. Create a plugin registry\n  const pluginRegistry = new PluginRegistry();\n\n  // 2. Register the plugins\n  pluginRegistry.registerPlugins(pluginsToRegister);\n\n  // 3. Get and resolve the service manager and connection status plugins\n  const IServiceManager = require('@jupyterlab/services').IServiceManager;\n  const serviceManager = await pluginRegistry.resolveRequiredService(IServiceManager);\n\n  // create the application\n  const app = new NotebookApp({\n    pluginRegistry,\n    mimeExtensions,\n    serviceManager,\n    availablePlugins: allPlugins\n  });\n  app.name = PageConfig.getOption('appName') || 'JupyterLite';\n\n  // Expose global app instance when in dev mode or when toggled explicitly.\n  const exposeAppInBrowser =\n    (PageConfig.getOption('exposeAppInBrowser') || '').toLowerCase() === 'true';\n\n  if (exposeAppInBrowser) {\n    window.jupyterapp = app;\n  }\n\n  // 4. Start the application, which will activate the other plugins\n  await app.start();\n  await app.restored;\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\n.jp-FileBrowser-toolbar .jp-Toolbar-item.jp-DropdownMenu,\n.jp-FileBrowser-toolbar .jp-Toolbar-item.jp-ToolbarButton,\n.jp-FileBrowser-toolbar .jp-Toolbar-item.jp-CommandToolbarButton {\n  border: solid 1px var(--jp-border-color2);\n  margin: 1px;\n  padding: 0px;\n}\n\n.jp-FileBrowser-toolbar > .jp-Toolbar-item.jp-ToolbarButton:hover,\n.jp-FileBrowser-toolbar > .jp-Toolbar-item.jp-CommandToolbarButton:hover,\n.jp-FileBrowser-toolbar > .jp-Toolbar-item.jp-DropdownMenu:hover {\n  background: var(--neutral-fill-stealth-hover);\n}\n\n.jp-FileBrowser-toolbar .lm-MenuBar-item {\n  height: var(--jp-private-toolbar-height);\n  display: inline-flex;\n  align-items: center;\n}\n\n.jp-FileBrowser-toolbar .jp-ToolbarButtonComponent {\n  height: var(--jp-flat-button-height);\n}\n\n.jp-FileBrowser-toolbar jp-button.jp-ToolbarButtonComponent:hover {\n  background: inherit;\n}\n\n.jp-DirListing-content .jp-DirListing-checkboxWrapper {\n  visibility: visible;\n}\n\n/* Action buttons */\n\n.jp-FileBrowser-toolbar > .jp-FileAction > .jp-ToolbarButtonComponent > svg {\n  display: none;\n}\n\n.jp-FileBrowser-toolbar > #fileAction-delete {\n  background-color: var(--jp-error-color1);\n}\n\n.jp-FileBrowser-toolbar\n  .jp-ToolbarButtonComponent[data-command='filebrowser:delete']\n  .jp-ToolbarButtonComponent-label {\n  color: var(--jp-ui-inverse-font-color1);\n}\n\n.jp-FileBrowser-toolbar .jp-FileAction {\n  border: solid 1px var(--jp-border-color2);\n  margin: 1px;\n  min-height: var(--jp-private-toolbar-height);\n}\n\nbody[data-format='mobile'] #fileAction-placeholder {\n  display: none;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@jupyter-notebook/tree-extension/style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;;8EAI8E;;AAE9E;;;EAGE,yCAAyC;EACzC,WAAW;EACX,YAAY;AACd;;AAEA;;;EAGE,6CAA6C;AAC/C;;AAEA;EACE,wCAAwC;EACxC,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA,mBAAmB;;AAEnB;EACE,aAAa;AACf;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;;;EAGE,uCAAuC;AACzC;;AAEA;EACE,yCAAyC;EACzC,WAAW;EACX,4CAA4C;AAC9C;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n|\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\\n.jp-FileBrowser-toolbar .jp-Toolbar-item.jp-DropdownMenu,\\n.jp-FileBrowser-toolbar .jp-Toolbar-item.jp-ToolbarButton,\\n.jp-FileBrowser-toolbar .jp-Toolbar-item.jp-CommandToolbarButton {\\n  border: solid 1px var(--jp-border-color2);\\n  margin: 1px;\\n  padding: 0px;\\n}\\n\\n.jp-FileBrowser-toolbar > .jp-Toolbar-item.jp-ToolbarButton:hover,\\n.jp-FileBrowser-toolbar > .jp-Toolbar-item.jp-CommandToolbarButton:hover,\\n.jp-FileBrowser-toolbar > .jp-Toolbar-item.jp-DropdownMenu:hover {\\n  background: var(--neutral-fill-stealth-hover);\\n}\\n\\n.jp-FileBrowser-toolbar .lm-MenuBar-item {\\n  height: var(--jp-private-toolbar-height);\\n  display: inline-flex;\\n  align-items: center;\\n}\\n\\n.jp-FileBrowser-toolbar .jp-ToolbarButtonComponent {\\n  height: var(--jp-flat-button-height);\\n}\\n\\n.jp-FileBrowser-toolbar jp-button.jp-ToolbarButtonComponent:hover {\\n  background: inherit;\\n}\\n\\n.jp-DirListing-content .jp-DirListing-checkboxWrapper {\\n  visibility: visible;\\n}\\n\\n/* Action buttons */\\n\\n.jp-FileBrowser-toolbar > .jp-FileAction > .jp-ToolbarButtonComponent > svg {\\n  display: none;\\n}\\n\\n.jp-FileBrowser-toolbar > #fileAction-delete {\\n  background-color: var(--jp-error-color1);\\n}\\n\\n.jp-FileBrowser-toolbar\\n  .jp-ToolbarButtonComponent[data-command='filebrowser:delete']\\n  .jp-ToolbarButtonComponent-label {\\n  color: var(--jp-ui-inverse-font-color1);\\n}\\n\\n.jp-FileBrowser-toolbar .jp-FileAction {\\n  border: solid 1px var(--jp-border-color2);\\n  margin: 1px;\\n  min-height: var(--jp-private-toolbar-height);\\n}\\n\\nbody[data-format='mobile'] #fileAction-placeholder {\\n  display: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.jp-FileBrowser {\n  height: 100%;\n}\n\n.lm-TabPanel {\n  height: 100%;\n}\n\n.jp-TreePanel .lm-TabPanel-tabBar {\n  overflow: visible;\n  min-height: 32px;\n  border-bottom: unset;\n  height: var(--jp-private-toolbar-height);\n}\n\n.jp-TreePanel .lm-TabBar-content {\n  height: 100%;\n}\n\n.jp-TreePanel .lm-TabBar-tab {\n  flex: 0 1 auto;\n  color: var(--jp-ui-font-color0);\n  font-size: var(--jp-ui-font-size1);\n  height: 100%;\n}\n\n.jp-TreePanel .lm-TabBar-tabLabel {\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n.jp-FileBrowser-toolbar.jp-Toolbar .jp-ToolbarButtonComponent {\n  width: unset;\n}\n\n.jp-FileBrowser-toolbar > .jp-Toolbar-item {\n  flex-direction: column;\n  justify-content: center;\n}\n\n.jp-DropdownMenu .lm-MenuBar-itemIcon svg {\n  vertical-align: sub;\n}\n\njp-button[data-command='filebrowser:refresh'] .jp-ToolbarButtonComponent-label {\n  display: none;\n}\n\n.jp-TreePanel .lm-TabBar-tabIcon svg {\n  vertical-align: sub;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@jupyter-notebook/tree/style/base.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,oBAAoB;EACpB,wCAAwC;AAC1C;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;EACd,+BAA+B;EAC/B,kCAAkC;EAClC,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,mBAAmB;AACrB\",\"sourcesContent\":[\".jp-FileBrowser {\\n  height: 100%;\\n}\\n\\n.lm-TabPanel {\\n  height: 100%;\\n}\\n\\n.jp-TreePanel .lm-TabPanel-tabBar {\\n  overflow: visible;\\n  min-height: 32px;\\n  border-bottom: unset;\\n  height: var(--jp-private-toolbar-height);\\n}\\n\\n.jp-TreePanel .lm-TabBar-content {\\n  height: 100%;\\n}\\n\\n.jp-TreePanel .lm-TabBar-tab {\\n  flex: 0 1 auto;\\n  color: var(--jp-ui-font-color0);\\n  font-size: var(--jp-ui-font-size1);\\n  height: 100%;\\n}\\n\\n.jp-TreePanel .lm-TabBar-tabLabel {\\n  padding-left: 5px;\\n  padding-right: 5px;\\n}\\n\\n.jp-FileBrowser-toolbar.jp-Toolbar .jp-ToolbarButtonComponent {\\n  width: unset;\\n}\\n\\n.jp-FileBrowser-toolbar > .jp-Toolbar-item {\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n.jp-DropdownMenu .lm-MenuBar-itemIcon svg {\\n  vertical-align: sub;\\n}\\n\\njp-button[data-command='filebrowser:refresh'] .jp-ToolbarButtonComponent-label {\\n  display: none;\\n}\\n\\n.jp-TreePanel .lm-TabBar-tabIcon svg {\\n  vertical-align: sub;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","disabled","async","createModule","scope","module","instance","window","_JUPYTERLAB","get","__scope__","e","console","warn","main","allPlugins","pluginsToRegister","federatedExtensionPromises","federatedMimeExtensionPromises","federatedStylePromises","extensions","JSON","parse","PageConfig","getOption","federatedExtensionNames","Set","activePlugins","extension","exports","hasOwnProperty","default","plugins","Array","isArray","plugin","Extension","isDisabled","id","includes","split","push","forEach","data","add","name","mimeExtension","style","mimeExtensions","has","ext","error","Promise","allSettled","p","status","value","reason","filter","pluginRegistry","PluginRegistry","registerPlugins","IServiceManager","serviceManager","resolveRequiredService","app","NotebookApp","availablePlugins","toLowerCase","jupyterapp","start","restored","___CSS_LOADER_EXPORT___"],"sourceRoot":""}