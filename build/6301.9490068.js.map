{"version":3,"file":"6301.9490068.js","mappings":"8JA8RIA,E,4IA7PAC,EAAU,CAAC,EACXC,GAAsB,SAAO,CAACC,EAAKC,KACrCH,EAAQE,GAAOC,CAAG,GACjB,OACCC,GAAsB,SAAQC,GAAML,EAAQK,IAAI,OAChDC,GAAuB,SAAO,IAAMC,OAAOD,KAAKN,IAAU,QAC1DQ,GAAuB,SAAO,IAAMF,IAAOG,QAAQ,QACnDC,EAAmB,CACrBN,MACAH,MACAK,OACAE,QAIEG,GAAiC,SAAQC,GAAMA,EAAEC,OAAO,UAAUC,KAAK,QAAS,eAAeA,KAAK,KAAK,UAAYC,MAAMC,UAAUF,KAAK,MAAM,UAAYC,MAAME,SAAU,UAAYF,MAAMC,UAAUF,KAAK,MAAM,UAAYC,MAAME,SAAU,UAAYF,MAAMC,WAAW,kBAC5QE,GAA8B,SAAQN,GAAMA,EAAEC,OAAO,QAAQM,MAAM,SAAU,QAAQA,MAAM,mBAAoB,KAAKL,KAAK,MAAM,UAAYC,MAAMK,YAAYN,KAAK,QAAS,WAAWA,KAAK,KAAqC,GAA/B,UAAYC,MAAMK,YAAgBN,KAAK,KAAM,GAAGA,KAAK,KAAM,IAAI,eAChQO,GAAkC,SAAO,CAACT,EAAGU,KAC/C,MAAMP,EAAQH,EAAEC,OAAO,QAAQC,KAAK,IAAK,GAAI,UAAYC,MAAME,SAASH,KAAK,KAAK,UAAYC,MAAMK,WAAa,GAAI,UAAYL,MAAME,SAASH,KAAK,aAAa,UAAYC,MAAMQ,UAAUT,KAAK,QAAS,eAAeU,KAAKF,EAASG,IACnOC,EAAWX,EAAMY,OAAOC,UAE9B,OADAhB,EAAEiB,OAAO,OAAQ,gBAAgBf,KAAK,KAAK,UAAYC,MAAME,SAASH,KAAK,KAAK,UAAYC,MAAME,SAASH,KAAK,QAASY,EAASI,MAAQ,GAAI,UAAYf,MAAME,SAASH,KAAK,SAAUY,EAASK,OAAS,GAAI,UAAYhB,MAAME,SAASH,KAAK,MAAM,UAAYC,MAAMiB,QAC/PjB,CAAK,GACX,mBACCkB,GAAiC,SAAO,CAACrB,EAAGU,KAC9C,MAAMY,GAA2B,SAAO,SAASC,EAAQC,EAAKC,GAC5D,MAAMC,EAAQH,EAAOtB,OAAO,SAASC,KAAK,IAAK,GAAI,UAAYC,MAAME,SAASO,KAAKY,GAC9EC,GACHC,EAAMxB,KAAK,MAAM,UAAYC,MAAMK,WAEvC,GAAG,YAEGmB,EADQ3B,EAAEC,OAAO,QAAQC,KAAK,IAAK,GAAI,UAAYC,MAAME,SAASH,KAAK,KAAK,UAAYC,MAAMK,WAAa,KAAM,UAAYL,MAAME,SAASH,KAAK,aAAa,UAAYC,MAAMQ,UAAUT,KAAK,QAAS,eAAeU,KAAKF,EAASkB,aAAa,IACjOb,OAAOC,UACxBa,EAAcF,EAASR,OACvBW,EAAc9B,EAAEC,OAAO,QAAQC,KAAK,KAAK,UAAYC,MAAME,SAASH,KACxE,IACA2B,EAA0C,IAA5B,UAAY1B,MAAME,SAAgB,UAAYF,MAAM4B,eAAgB,UAAY5B,MAAMK,YACpGN,KAAK,QAAS,qBAChB,IAAI8B,GAAU,EACVC,GAAW,EACfvB,EAASkB,aAAaM,SAAQ,SAASC,GAChCH,IACHV,EAASQ,EAAaK,EAAOF,GAC7BA,GAAW,GAEbD,GAAU,CACZ,IACA,MAAMI,EAAYpC,EAAEC,OAAO,QAAQC,KAAK,MAAM,UAAYC,MAAME,SAASH,KAAK,MAAM,UAAYC,MAAME,QAAUwB,GAAc,UAAY1B,MAAM4B,cAAgB,GAAG7B,KAAK,MAAM,UAAYC,MAAME,QAAUwB,GAAc,UAAY1B,MAAM4B,cAAgB,GAAG7B,KAAK,QAAS,iBACrQmC,EAAWP,EAAYf,OAAOC,UAC9BE,EAAQoB,KAAKC,IAAIF,EAASnB,MAAOS,EAAST,OAGhD,OAFAkB,EAAUlC,KAAK,KAAMgB,EAAQ,GAAI,UAAYf,MAAME,SACnDL,EAAEiB,OAAO,OAAQ,gBAAgBf,KAAK,KAAK,UAAYC,MAAME,SAASH,KAAK,KAAK,UAAYC,MAAME,SAASH,KAAK,QAASgB,EAAQ,GAAI,UAAYf,MAAME,SAASH,KAAK,SAAUmC,EAASlB,OAASU,EAAc,GAAI,UAAY1B,MAAME,SAASH,KAAK,MAAM,UAAYC,MAAMiB,QACpQpB,CAAC,GACP,kBACCwC,GAAiC,SAAO,CAACxC,EAAGU,EAAU+B,KACxD,MAAMC,GAAM,UAAYvC,MAAME,QACxBsC,EAAS,GAAI,UAAYxC,MAAME,QAC/BuC,EAAS5C,EAAEe,OAAOC,UAClB6B,EAAWD,EAAO1B,MAClB4B,EAAOF,EAAOG,EACdC,EAAQhD,EAAEC,OAAO,QAAQC,KAAK,IAAK,GAAGA,KAAK,KAAK,UAAYC,MAAM8C,YAAY/C,KAAK,aAAa,UAAYC,MAAMQ,UAAUT,KAAK,QAAS,eAAeU,KAAKF,EAASG,IAEvKqC,EADWF,EAAMjC,OAAOC,UACFE,MAAQyB,EACpC,IAIIQ,EAJAjC,EAAQoB,KAAKC,IAAIW,EAAYL,GAC7B3B,IAAU2B,IACZ3B,GAAgByB,GAGlB,MAAMS,EAAWpD,EAAEe,OAAOC,UACtBN,EAAS2C,IAEbF,EAASL,EAAOJ,EACZQ,EAAaL,IACfM,GAAUN,EAAW3B,GAAS,EAAIwB,GAEhCJ,KAAKgB,IAAIR,EAAOM,EAASL,GAAKL,GAAOQ,EAAaL,IACpDM,EAASL,GAAQI,EAAaL,GAAY,GAE5C,MAAMU,EAAQ,GAAI,UAAYpD,MAAMK,WAiBpC,OAhBAR,EAAEiB,OAAO,OAAQ,gBAAgBf,KAAK,IAAKiD,GAAQjD,KAAK,IAAKqD,GAAOrD,KAAK,QAASuC,EAAS,eAAiB,YAAYvC,KAAK,QAASgB,GAAOhB,KAC3I,SACAkD,EAASjC,QAAS,UAAYhB,MAAMK,YAAa,UAAYL,MAAM8C,WAAa,GAChF/C,KAAK,KAAM,KACb8C,EAAM9C,KAAK,IAAKiD,EAAST,GACrBQ,GAAcL,GAChBG,EAAM9C,KAAK,IAAK4C,GAAQ5B,EAAQyB,GAAU,EAAIO,EAAa,EAAIR,GAEjE1C,EAAEiB,OAAO,OAAQ,gBAAgBf,KAAK,IAAKiD,GAAQjD,KACjD,KACA,UAAYC,MAAM8C,YAAa,UAAY9C,MAAMK,YAAa,UAAYL,MAAME,SAChFH,KAAK,QAASgB,GAAOhB,KAAK,SAAyC,GAA/B,UAAYC,MAAMK,YAAgBN,KAAK,MAAM,UAAYC,MAAMiB,QACrGpB,EAAEiB,OAAO,OAAQ,gBAAgBf,KAAK,IAAKiD,GAAQjD,KACjD,KACA,UAAYC,MAAM8C,YAAa,UAAY9C,MAAMK,YAAa,UAAYL,MAAME,SAChFH,KAAK,QAASgB,GAAOhB,KAAK,SAAUkD,EAASjC,OAAS,EAAI,GAAI,UAAYhB,MAAMK,YAAYN,KAAK,MAAM,UAAYC,MAAMiB,QACpHpB,CAAC,GACP,kBACCwD,GAA+B,SAAQxD,IACzCA,EAAEC,OAAO,UAAUC,KAAK,QAAS,mBAAmBA,KAAK,KAAK,UAAYC,MAAMC,UAAW,UAAYD,MAAMsD,aAAavD,KACxH,MACA,UAAYC,MAAME,SAAU,UAAYF,MAAMC,UAAW,UAAYD,MAAMsD,aAC3EvD,KACA,MACA,UAAYC,MAAME,SAAU,UAAYF,MAAMC,UAAW,UAAYD,MAAMsD,aAEtEzD,EAAEC,OAAO,UAAUC,KAAK,QAAS,mBAAmBA,KAAK,KAAK,UAAYC,MAAMC,UAAUF,KAAK,MAAM,UAAYC,MAAME,SAAU,UAAYF,MAAMC,SAAW,GAAGF,KAAK,MAAM,UAAYC,MAAME,SAAU,UAAYF,MAAMC,SAAW,KAC3O,gBACCsD,GAAoC,SAAO,CAAC1D,EAAGU,KACjD,IAAIQ,GAAQ,UAAYf,MAAMwD,UAC1BxC,GAAS,UAAYhB,MAAMyD,WAC/B,GAAIlD,EAASmD,SAAU,CACrB,IAAIC,EAAM5C,EACVA,EAAQC,EACRA,EAAS2C,CACX,CACA,OAAO9D,EAAEC,OAAO,QAAQM,MAAM,SAAU,SAASA,MAAM,OAAQ,SAASL,KAAK,QAASgB,GAAOhB,KAAK,SAAUiB,GAAQjB,KAAK,KAAK,UAAYC,MAAME,SAASH,KAAK,KAAK,UAAYC,MAAME,QAAQ,GAC5L,qBACC0D,GAAgC,SAAO,CAACC,EAAOjB,EAAGkB,EAAGjE,KACvD,IAAIQ,EAAa,EACjB,MAAM0D,EAAWlE,EAAEC,OAAO,QAC1BiE,EAAS3D,MAAM,cAAe,SAC9B2D,EAAShE,KAAK,QAAS,YACvB,IAAIU,EAAOoD,EAAMG,QAAQ,QAAS,SAClCvD,EAAOA,EAAKuD,QAAQ,MAAO,SAC3B,MAAMC,EAAQxD,EAAKyD,MAAM,KAAeC,gBACxC,IAAIC,EAAU,MAAO,UAAYpE,MAAMqE,WACvC,IAAK,MAAMC,KAASL,EAAO,CACzB,MAAM5C,EAAMiD,EAAMC,OAClB,GAAIlD,EAAI3B,OAAS,EAAG,CAClB,MAAM8E,EAAOT,EAASjE,OAAO,SAC7B0E,EAAK/D,KAAKY,GACM,IAAZ+C,IAEFA,GADmBI,EAAK5D,OAAOC,UACTG,QAExBX,GAAc+D,EACdI,EAAKzE,KAAK,IAAK6C,GAAI,UAAY5C,MAAMqE,YACrCG,EAAKzE,KAAK,IAAK+D,EAAIzD,EAAa,MAAO,UAAYL,MAAMqE,WAC3D,CACF,CACA,MAAO,CAAEI,UAAWV,EAASnD,OAAOC,UAAUE,MAAOV,aAAY,GAChE,iBACCqE,GAA2B,SAAO,CAACjE,EAAMZ,KAC3CA,EAAEE,KAAK,QAAS,cAChB,MAAM4E,EAAO9E,EAAEC,OAAO,QAAQC,KAAK,IAAK,GAAGA,KAAK,KAAK,UAAYC,MAAME,SACjE0E,EAAW/E,EAAEC,OAAO,MACpB,UAAE2E,EAAS,WAAEpE,GAAeuD,EAAcnD,EAAM,EAAG,EAAGmE,GAG5D,OAFAD,EAAK5E,KAAK,SAAUM,EAAa,GAAI,UAAYL,MAAMqE,YACvDM,EAAK5E,KAAK,QAAS0E,EAA2C,GAA/B,UAAYzE,MAAMqE,YAC1CM,CAAI,GACV,YACCE,GAA4B,SAAO,SAASC,EAAMvE,GACpD,MAAMG,EAAKH,EAASG,GACdqE,EAAY,CAChBrE,KACAsE,MAAOzE,EAASG,GAChBK,MAAO,EACPC,OAAQ,GAEJnB,EAAIiF,EAAKhF,OAAO,KAAKC,KAAK,KAAMW,GAAIX,KAAK,QAAS,cAClC,UAAlBQ,EAAS0E,MACXrF,EAAeC,GAEK,QAAlBU,EAAS0E,MACX5B,EAAaxD,GAEO,SAAlBU,EAAS0E,MAAqC,SAAlB1E,EAAS0E,MACvC1B,EAAkB1D,EAAGU,GAED,SAAlBA,EAAS0E,MACXP,EAASnE,EAASoE,KAAKlE,KAAMZ,GAET,YAAlBU,EAAS0E,MACX9E,EAAYN,GAEQ,YAAlBU,EAAS0E,MAAuD,IAAjC1E,EAASkB,aAAa/B,QACvDY,EAAgBT,EAAGU,GAEC,YAAlBA,EAAS0E,MAAsB1E,EAASkB,aAAa/B,OAAS,GAChEwB,EAAerB,EAAGU,GAEpB,MAAM2E,EAAWrF,EAAEe,OAAOC,UAI1B,OAHAkE,EAAUhE,MAAQmE,EAASnE,MAAQ,GAAI,UAAYf,MAAME,QACzD6E,EAAU/D,OAASkE,EAASlE,OAAS,GAAI,UAAYhB,MAAME,QAC3DP,EAAiBT,IAAIwB,EAAIqE,GAClBA,CACT,GAAG,aACCI,EAAY,EACZC,GAA2B,SAAO,SAASN,EAAMO,EAAMC,GACzD,MAAMC,GAAkC,SAAO,SAASN,GACtD,OAAQA,GACN,KAAK,KAAQO,aAAaC,YACxB,MAAO,cACT,KAAK,KAAQD,aAAaE,UACxB,MAAO,YACT,KAAK,KAAQF,aAAaG,YACxB,MAAO,cACT,KAAK,KAAQH,aAAaI,WACxB,MAAO,aAEb,GAAG,mBACHP,EAAKQ,OAASR,EAAKQ,OAAOC,QAAQC,IAAOC,OAAOC,MAAMF,EAAEjC,KACxD,MAAMoC,EAAWb,EAAKQ,OAChBM,GAAe,WAAOvD,GAAE,SAASwD,GACrC,OAAOA,EAAExD,CACX,IAAGkB,GAAE,SAASsC,GACZ,OAAOA,EAAEtC,CACX,IAAGuC,MAAM,OACHC,EAAUxB,EAAKhF,OAAO,QAAQC,KAAK,IAAKoG,EAAaD,IAAWnG,KAAK,KAAM,OAASoF,GAAWpF,KAAK,QAAS,cACnH,IAAIwG,EAAM,GAUV,IATI,UAAYvG,MAAMwG,sBACpBD,EAAME,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,KAAOH,OAAOC,SAASG,SAAWJ,OAAOC,SAASI,OAC1GP,EAAMA,EAAIvC,QAAQ,MAAO,OACzBuC,EAAMA,EAAIvC,QAAQ,MAAO,QAE3BsC,EAAQvG,KACN,aACA,OAASwG,EAAM,IAAMhB,EAAgB,KAAQC,aAAaI,YAAc,aAEnD,IAAnBN,EAASzC,MAAkB,CAC7B,MAAMmC,EAAQF,EAAKhF,OAAO,KAAKC,KAAK,QAAS,eACvC,EAAE6C,EAAC,EAAEkB,GAAM,KAAciD,kBAAkB1B,EAAKQ,QAChDmB,EAAO,KAAeC,QAAQ3B,EAASzC,OAC7C,IAAInB,EAAc,EAClB,MAAMwF,EAAY,GAClB,IAAIC,EAAW,EACXC,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAKtH,OAAQ2H,IAAK,CACrC,MAAMxE,EAAQmC,EAAMlF,OAAO,QAAQC,KAAK,cAAe,UAAUU,KAAKuG,EAAKK,IAAItH,KAAK,IAAK6C,GAAG7C,KAAK,IAAK+D,EAAIpC,GACpG4F,EAAYzE,EAAMjC,OAAOC,UAI/B,GAHAsG,EAAWhF,KAAKC,IAAI+E,EAAUG,EAAUvG,OACxCqG,EAAOjF,KAAKoF,IAAIH,EAAME,EAAU1E,GAChC,KAAI4E,KAAKF,EAAU1E,EAAGA,EAAGkB,EAAIpC,GACT,IAAhBA,EAAmB,CACrB,MAAMF,EAAWqB,EAAMjC,OAAOC,UAC9Ba,EAAcF,EAASR,OACvB,KAAIwG,KAAK,eAAgB9F,EAAaoC,EACxC,CACAoD,EAAUO,KAAK5E,EACjB,CACA,IAAI6E,EAAYhG,EAAcsF,EAAKtH,OACnC,GAAIsH,EAAKtH,OAAS,EAAG,CACnB,MAAMiI,GAAaX,EAAKtH,OAAS,GAAKgC,EAAc,GACpDwF,EAAUnF,SAAQ,CAACc,EAAOwE,IAAMxE,EAAM9C,KAAK,IAAK+D,EAAIuD,EAAI3F,EAAciG,KACtED,EAAYhG,EAAcsF,EAAKtH,MACjC,CACA,MAAMkI,EAAS5C,EAAMpE,OAAOC,UAC5BmE,EAAMlE,OAAO,OAAQ,gBAAgBf,KAAK,QAAS,OAAOA,KAAK,IAAK6C,EAAIuE,EAAW,GAAI,UAAYnH,MAAME,QAAU,GAAGH,KAAK,IAAK+D,EAAI4D,EAAY,GAAI,UAAY1H,MAAME,QAAU,EAAI,KAAKH,KAAK,QAASoH,GAAW,UAAYnH,MAAME,SAASH,KAAK,SAAU2H,GAAY,UAAY1H,MAAME,SAC1R,KAAIsH,KAAKI,EACX,CACAzC,GACF,GAAG,YAIC0C,EAAoB,CAAC,EACrBC,GAA0B,SAAO,WACrC,GAAG,WACCC,GAAgC,SAAO,SAASjD,GAClDA,EAAKhF,OAAO,QAAQA,OAAO,UAAUC,KAAK,KAAM,iBAAiBA,KAAK,OAAQ,IAAIA,KAAK,OAAQ,GAAGA,KAAK,cAAe,IAAIA,KAAK,eAAgB,IAAIA,KAAK,SAAU,QAAQD,OAAO,QAAQC,KAAK,IAAK,4BACrM,GAAG,iBACCiI,GAAuB,SAAO,SAASvH,EAAMC,EAAIuH,EAAUC,GAC7DlJ,GAAO,UAAYgB,MACnB,MAAMmI,GAAgB,UAAYA,cAClC,IAAIC,EACkB,YAAlBD,IACFC,GAAiB,QAAO,KAAO1H,IAEjC,MAAM2H,EAAyB,YAAlBF,GAA8B,QAAOC,EAAeE,QAAQ,GAAGC,gBAAgBC,OAAQ,QAAO,QACrGtF,EAAwB,YAAlBiF,EAA8BC,EAAeE,QAAQ,GAAGC,gBAAkBE,SACtF,KAAIC,MAAM,qBAAuBjI,GACjC,MAAMkI,EAAWN,EAAKO,OAAO,QAAQlI,OACrCqH,EAAcY,GACd,MAAME,EAAUX,EAAQY,GAAGC,aAC3BC,EAAUH,EAASF,OAAU,GAAQ,EAAON,EAAMnF,EAAKgF,GACvD,MAAMhI,EAAUlB,EAAKkB,QACf0H,EAASe,EAAS/H,OAAOC,UACzBE,EAAQ6G,EAAO7G,MAAkB,EAAVb,EACvBc,EAAS4G,EAAO5G,OAAmB,EAAVd,EACzB+I,EAAmB,KAARlI,GACjB,QAAiB4H,EAAU3H,EAAQiI,EAAUjK,EAAKkK,aAClDP,EAAS5I,KACP,UACA,GAAG6H,EAAOhF,EAAI5D,EAAKkB,YAAY0H,EAAO9D,EAAI9E,EAAKkB,WAAaa,EAAQ,IAAMC,EAE9E,GAAG,QACCmI,GAAgC,SAAQ1I,GACnCA,EAAOA,EAAKf,OAASV,EAAKoK,eAAiB,GACjD,iBACCJ,GAA4B,SAAO,CAAC9F,EAAKyF,EAAUjF,EAAUpB,EAAQ+F,EAAMgB,EAAanB,KAC1F,MAAMoB,EAAQ,IAAI,IAAe,CAC/BC,UAAU,EACVC,YAAY,IAEd,IAAInC,EACAoC,GAAc,EAClB,IAAKpC,EAAI,EAAGA,EAAInE,EAAIxD,OAAQ2H,IAC1B,GAAoB,aAAhBnE,EAAImE,GAAGqC,KAAqB,CAC9BD,GAAc,EACd,KACF,CAEE/F,EACF4F,EAAMK,SAAS,CACbC,QAAS,KACTJ,YAAY,EACZD,UAAU,EAEVM,OAAQ,aACRC,QAASL,EAAc,EAAIzK,EAAK+K,iBAChCC,QAASP,EAAc,EAAI,GAC3BQ,cAAc,IAKhBX,EAAMK,SAAS,CACbC,QAAS,KACTJ,YAAY,EACZD,UAAU,EAIVO,QAASL,EAAc,EAAIzK,EAAK+K,iBAChCC,QAASP,EAAc,EAAI,GAC3BI,OAAQ,aAERI,cAAc,IAGlBX,EAAMY,qBAAoB,WACxB,MAAO,CAAC,CACV,IACA,MAAMC,EAASjC,EAAQY,GAAGsB,YACpBC,EAAYnC,EAAQY,GAAGwB,eACvBC,EAAQ/K,OAAOD,KAAK4K,GAE1B,IAAK,MAAMhL,KAAOoL,EAAO,CACvB,MAAMhK,EAAW4J,EAAOhL,GAIxB,IAAIyB,EACJ,GAJI8C,IACFnD,EAASmD,SAAWA,GAGlBnD,EAAS2C,IAAK,CAChB,IAAIsH,EAAM7B,EAAS7I,OAAO,KAAKC,KAAK,KAAMQ,EAASG,IAAIX,KAAK,QAAS,cACrEa,EAAOoI,EAAUzI,EAAS2C,IAAKsH,EAAKjK,EAASG,IAAK4B,EAAQ+F,EAAMgB,EAAanB,GAClE,CACTsC,EAAMnI,EAAemI,EAAKjK,EAAU+B,GACpC,IAAImI,EAAYD,EAAI5J,OAAOC,UAC3BD,EAAKG,MAAQ0J,EAAU1J,MACvBH,EAAKI,OAASyJ,EAAUzJ,OAAShC,EAAKkB,QAAU,EAChD2H,EAAkBtH,EAASG,IAAM,CAAEoD,EAAG9E,EAAK0L,kBAC7C,CAKF,MACE9J,EAAOiE,EAAU8D,EAAUpI,EAAU+I,GAEvC,GAAI/I,EAASoE,KAAM,CACjB,MAAMgG,EAAU,CACdlJ,aAAc,GACdf,GAAIH,EAASG,GAAK,QAClBiE,KAAMpE,EAASoE,KACfM,KAAM,QAEFN,EAAOE,EAAU8D,EAAUgC,EAASrB,GACX,YAA3B/I,EAASoE,KAAKiG,UAChBtB,EAAMuB,QAAQjK,EAAKF,GAAK,QAASiE,GACjC2E,EAAMuB,QAAQjK,EAAKF,GAAIE,KAEvB0I,EAAMuB,QAAQjK,EAAKF,GAAIE,GACvB0I,EAAMuB,QAAQjK,EAAKF,GAAK,QAASiE,IAEnC2E,EAAMwB,UAAUlK,EAAKF,GAAIE,EAAKF,GAAK,UACnC4I,EAAMwB,UAAUlK,EAAKF,GAAK,QAASE,EAAKF,GAAK,SAC/C,MACE4I,EAAMuB,QAAQjK,EAAKF,GAAIE,EAE3B,CACA,KAAI8H,MAAM,SAAUY,EAAMyB,YAAazB,GACvC,IAAI0B,EAAM,EACVX,EAAUtI,SAAQ,SAASuD,GACzB0F,IACA,KAAItC,MAAM,eAAgBpD,GAC1BgE,EAAM2B,QACJ3F,EAAS4F,IACT5F,EAAS6F,IACT,CACE7F,WACAvE,MAAOoI,EAAc7D,EAASzC,OAC9B7B,OAAQhC,EAAKoM,YAAc,KAAenE,QAAQ3B,EAASzC,OAAOnD,OAClE2L,SAAU,KAEZ,KAAOL,EAEX,KACA,QAAY1B,GACZ,KAAIZ,MAAM,qBAAsBY,EAAMhB,SACtC,MAAMgD,EAAU3C,EAAS/H,OACzB0I,EAAMhB,QAAQvG,SAAQ,SAASwJ,QACnB,IAANA,QAAkC,IAAlBjC,EAAM1I,KAAK2K,IAC7B,KAAIC,KAAK,QAAUD,EAAI,KAAOE,KAAKC,UAAUpC,EAAM1I,KAAK2K,KACxDlD,EAAKO,OAAO,IAAM0C,EAAQ5K,GAAK,KAAO6K,GAAGxL,KACvC,YACA,cAAgBuJ,EAAM1I,KAAK2K,GAAG3I,EAAI0G,EAAM1I,KAAK2K,GAAGxK,MAAQ,GAAK,KAAOuI,EAAM1I,KAAK2K,GAAGzH,GAAK+D,EAAkB0D,GAAK1D,EAAkB0D,GAAGzH,EAAI,GAAKwF,EAAM1I,KAAK2K,GAAGvK,OAAS,GAAK,MAE1KqH,EAAKO,OAAO,IAAM0C,EAAQ5K,GAAK,KAAO6K,GAAGxL,KAAK,eAAgBuJ,EAAM1I,KAAK2K,GAAG3I,EAAI0G,EAAM1I,KAAK2K,GAAGxK,MAAQ,GACrFsI,EAAYsC,iBAAiB,IAAML,EAAQ5K,GAAK,KAAO6K,EAAI,aACnExJ,SAAS6J,IAChB,MAAMC,EAASD,EAAQE,cACvB,IAAIC,EAAS,EACTC,EAAS,EACTH,IACEA,EAAOC,gBACTC,EAASF,EAAOC,cAAcjL,UAAUE,OAE1CiL,EAASC,SAASJ,EAAOK,aAAa,gBAAiB,IACnDlG,OAAOC,MAAM+F,KACfA,EAAS,IAGbJ,EAAQO,aAAa,KAAM,EAAIH,EAAS,GACxCJ,EAAQO,aAAa,KAAMJ,EAASC,EAAS,EAAE,KAGjD,KAAItD,MAAM,WAAa6C,EAAI,KAAOE,KAAKC,UAAUpC,EAAM1I,KAAK2K,IAEhE,IACA,IAAIrG,EAAWoG,EAAQzK,UACvByI,EAAM8C,QAAQrK,SAAQ,SAASsK,QACnB,IAANA,QAAkC,IAAlB/C,EAAMgD,KAAKD,KAC7B,KAAI3D,MAAM,QAAU2D,EAAEd,EAAI,OAASc,EAAEE,EAAI,KAAOd,KAAKC,UAAUpC,EAAMgD,KAAKD,KAC1EjH,EAASuD,EAAUW,EAAMgD,KAAKD,GAAI/C,EAAMgD,KAAKD,GAAG/G,UAEpD,IACAJ,EAAWoG,EAAQzK,UACnB,MAAMkE,EAAY,CAChBrE,GAAIgD,GAAsB,OAC1BsB,MAAOtB,GAAsB,OAC7B3C,MAAO,EACPC,OAAQ,GAKV,OAHA+D,EAAUhE,MAAQmE,EAASnE,MAAQ,EAAI/B,EAAKkB,QAC5C6E,EAAU/D,OAASkE,EAASlE,OAAS,EAAIhC,EAAKkB,QAC9C,KAAIwI,MAAM,eAAgB3D,EAAWuE,GAC9BvE,CAAS,GACf,aACCyH,EAAwB,CAC1B1E,UACAE,QAIEyE,EAAU,CACZC,OAAQ,KACR,MAAI5D,GACF,OAAO,IAAI,KAAQ,EACrB,EACA6D,SAAUH,EACVI,OAAQ,KACRC,MAAsB,SAAQC,IACvBA,EAAI9M,QACP8M,EAAI9M,MAAQ,CAAC,GAEf8M,EAAI9M,MAAMwG,oBAAsBsG,EAAItG,mBAAmB,GACtD,Q","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/mermaid/dist/chunks/mermaid.core/stateDiagram-DGXRK772.mjs"],"sourcesContent":["import {\n  StateDB,\n  stateDiagram_default,\n  styles_default\n} from \"./chunk-AEK57VVT.mjs\";\nimport \"./chunk-RZ5BOZE2.mjs\";\nimport \"./chunk-TYCBKAJE.mjs\";\nimport \"./chunk-IIMUDSI4.mjs\";\nimport \"./chunk-VV3M67IP.mjs\";\nimport \"./chunk-HRU6DDCH.mjs\";\nimport \"./chunk-K557N5IZ.mjs\";\nimport \"./chunk-H2D2JQ3I.mjs\";\nimport \"./chunk-C3MQ5ANM.mjs\";\nimport {\n  utils_default\n} from \"./chunk-O4NI6UNU.mjs\";\nimport {\n  __name,\n  common_default,\n  configureSvgSize,\n  getConfig2 as getConfig,\n  log\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/state/stateRenderer.js\nimport { select } from \"d3\";\nimport { layout as dagreLayout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\n\n// src/diagrams/state/shapes.js\nimport { line, curveBasis } from \"d3\";\n\n// src/diagrams/state/id-cache.js\nvar idCache = {};\nvar set = /* @__PURE__ */ __name((key, val) => {\n  idCache[key] = val;\n}, \"set\");\nvar get = /* @__PURE__ */ __name((k) => idCache[k], \"get\");\nvar keys = /* @__PURE__ */ __name(() => Object.keys(idCache), \"keys\");\nvar size = /* @__PURE__ */ __name(() => keys().length, \"size\");\nvar id_cache_default = {\n  get,\n  set,\n  keys,\n  size\n};\n\n// src/diagrams/state/shapes.js\nvar drawStartState = /* @__PURE__ */ __name((g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit), \"drawStartState\");\nvar drawDivider = /* @__PURE__ */ __name((g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0), \"drawDivider\");\nvar drawSimpleState = /* @__PURE__ */ __name((g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n}, \"drawSimpleState\");\nvar drawDescrState = /* @__PURE__ */ __name((g, stateDef) => {\n  const addTspan = /* @__PURE__ */ __name(function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  }, \"addTspan\");\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"drawDescrState\");\nvar addTitleAndBox = /* @__PURE__ */ __name((g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc) {\n  }\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"addTitleAndBox\");\nvar drawEndState = /* @__PURE__ */ __name((g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n}, \"drawEndState\");\nvar drawForkJoinState = /* @__PURE__ */ __name((g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n}, \"drawForkJoinState\");\nvar _drawLongText = /* @__PURE__ */ __name((_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common_default.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n}, \"_drawLongText\");\nvar drawNote = /* @__PURE__ */ __name((text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n}, \"drawNote\");\nvar drawState = /* @__PURE__ */ __name(function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  id_cache_default.set(id, stateInfo);\n  return stateInfo;\n}, \"drawState\");\nvar edgeCount = 0;\nvar drawEdge = /* @__PURE__ */ __name(function(elem, path, relation) {\n  const getRelationType = /* @__PURE__ */ __name(function(type) {\n    switch (type) {\n      case StateDB.relationType.AGGREGATION:\n        return \"aggregation\";\n      case StateDB.relationType.EXTENSION:\n        return \"extension\";\n      case StateDB.relationType.COMPOSITION:\n        return \"composition\";\n      case StateDB.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  }, \"getRelationType\");\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(StateDB.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils_default.calcLabelPosition(path.points);\n    const rows = common_default.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundsTmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundsTmp.width);\n      minX = Math.min(minX, boundsTmp.x);\n      log.info(boundsTmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n}, \"drawEdge\");\n\n// src/diagrams/state/stateRenderer.js\nvar conf;\nvar transformationLog = {};\nvar setConf = /* @__PURE__ */ __name(function() {\n}, \"setConf\");\nvar insertMarkers = /* @__PURE__ */ __name(function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n}, \"insertMarkers\");\nvar draw = /* @__PURE__ */ __name(function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n}, \"draw\");\nvar getLabelWidth = /* @__PURE__ */ __name((text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n}, \"getLabelWidth\");\nvar renderDoc = /* @__PURE__ */ __name((doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  let first = true;\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      if (first) {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      } else {\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n      }\n    } else {\n      node = drawState(diagram2, stateDef, graph);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef, graph);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common_default.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  dagreLayout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n}, \"renderDoc\");\nvar stateRenderer_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/state/stateDiagram.ts\nvar diagram = {\n  parser: stateDiagram_default,\n  get db() {\n    return new StateDB(1);\n  },\n  renderer: stateRenderer_default,\n  styles: styles_default,\n  init: /* @__PURE__ */ __name((cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n  }, \"init\")\n};\nexport {\n  diagram\n};\n"],"names":["conf","idCache","set","key","val","get","k","keys","Object","size","length","id_cache_default","drawStartState","g","append","attr","state","sizeUnit","padding","drawDivider","style","textHeight","drawSimpleState","stateDef","fontSize","text","id","classBox","node","getBBox","insert","width","height","radius","drawDescrState","addTspan","textEl","txt","isFirst2","tSpan","titleBox","descriptions","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","descrLine","descrBox","Math","max","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","title","titleShift","titleWidth","startX","graphBox","doc","abs","lineY","drawEndState","miniPadding","drawForkJoinState","forkWidth","forkHeight","parentId","tmp","_drawLongText","_text","y","textElem","replace","lines","split","lineBreakRegex","tHeight","noteMargin","line2","trim","span","textWidth","drawNote","note","rectElem","drawState","elem","stateInfo","label","type","stateBox","edgeCount","drawEdge","path","relation","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","points","filter","p","Number","isNaN","lineData","lineFunction","d","curve","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","calcLabelPosition","rows","getRows","titleRows","maxWidth","minX","i","boundsTmp","min","info","push","boxHeight","heightAdj","bounds","transformationLog","setConf","insertMarkers","draw","_version","diagObj","securityLevel","sandboxElement","root","nodes","contentDocument","body","document","debug","diagram2","select","rootDoc","db","getRootDoc","renderDoc","svgWidth","useMaxWidth","getLabelWidth","fontSizeFactor","domDocument","graph","compound","multigraph","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","states","getStates","relations","getRelations","keys2","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","nodeCount","cnt","setEdge","id1","id2","labelHeight","labelpos","svgElem","v","warn","JSON","stringify","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","setAttribute","edges","e","edge","w","stateRenderer_default","diagram","parser","renderer","styles","init","cnf"],"sourceRoot":""}