"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[4905],{4905:(t,e,n)=>{n.r(e),n.d(e,{BLOCK_SIZE:()=>C,BrowserStorageDrive:()=>p,ContentsAPI:()=>D,DIR_MODE:()=>w,DRIVE_NAME:()=>m,DRIVE_SEPARATOR:()=>P,DriveContentsProcessor:()=>T,DriveFS:()=>x,DriveFSEmscriptenNodeOps:()=>b,DriveFSEmscriptenStreamOps:()=>k,FILE:()=>r,FILE_MODE:()=>y,MIME:()=>a,SEEK_CUR:()=>_,SEEK_END:()=>E,ServiceWorkerContentsAPI:()=>N,instanceOfStream:()=>S});var a,r,s=n(60649),i=n(43234),o=n(5406),h=n(2536),c=n(9879),l=n.n(c);!function(t){t.JSON="application/json",t.PLAIN_TEXT="text/plain",t.OCTET_STREAM="octet/stream"}(a||(a={})),function(t){const e=JSON.parse(s.PageConfig.getOption("fileTypes")||"{}");t.getType=function(t,n=null){t=t.toLowerCase();for(const n of Object.values(e))for(const e of n.extensions||[])if(e===t&&n.mimeTypes&&n.mimeTypes.length)return n.mimeTypes[0];return l().getType(t)||n||a.OCTET_STREAM},t.hasFormat=function(t,n){t=t.toLowerCase();for(const a of Object.values(e))if(a.fileFormat===n)for(const e of a.extensions||[])if(e===t)return!0;return!1}}(r||(r={}));const d="JupyterLite Storage",m="BrowserStorage",f=new TextEncoder,u=new TextDecoder("utf-8");class p{constructor(t){var e;this.reduceBytesToString=(t,e)=>t+String.fromCharCode(e),this._serverContents=new Map,this._isDisposed=!1,this._fileChanged=new h.Signal(this),this._storageName=d,this._storageDrivers=null,this._localforage=t.localforage,this._storageName=t.storageName||d,this._storageDrivers=t.storageDrivers||null,this._serverSettings=null!==(e=t.serverSettings)&&void 0!==e?e:i.ServerConnection.makeSettings(),this._ready=new o.PromiseDelegate,this.initialize().catch(console.warn)}dispose(){this.isDisposed||(this._isDisposed=!0,h.Signal.clearData(this))}get isDisposed(){return this._isDisposed}get name(){return m}get serverSettings(){return this._serverSettings}get fileChanged(){return this._fileChanged}async getDownloadUrl(t){throw new Error("Method not implemented.")}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.createDefaultStorage(),this._counters=this.createDefaultCounters(),this._checkpoints=this.createDefaultCheckpoints()}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}get counters(){return this.ready.then((()=>this._counters))}get checkpoints(){return this.ready.then((()=>this._checkpoints))}get defaultStorageOptions(){const t=this._storageDrivers&&this._storageDrivers.length?this._storageDrivers:null;return{version:1,name:this._storageName,...t?{driver:t}:{}}}createDefaultStorage(){return this._localforage.createInstance({description:"Offline Storage for Notebooks and Files",storeName:"files",...this.defaultStorageOptions})}createDefaultCounters(){return this._localforage.createInstance({description:"Store the current file suffix counters",storeName:"counters",...this.defaultStorageOptions})}createDefaultCheckpoints(){return this._localforage.createInstance({description:"Offline Storage for Checkpoints",storeName:"checkpoints",...this.defaultStorageOptions})}async clearStorage(){await Promise.all([(await this.storage).clear(),(await this.counters).clear(),(await this.checkpoints).clear()])}async newUntitled(t){var e,n,i;const o=null!==(e=null==t?void 0:t.path)&&void 0!==e?e:"",h=null!==(n=null==t?void 0:t.type)&&void 0!==n?n:"notebook",c=(new Date).toISOString();let l=s.PathExt.dirname(o);const d=s.PathExt.basename(o),m=s.PathExt.extname(o),u=await this.get(l).catch((()=>null));let p,w="";switch(o&&!m&&u?(l=`${o}/`,w=""):l&&d?(l=`${l}/`,w=d):(l="",w=o),h){case"directory":w=`Untitled Folder${await this._incrementCounter("directory")||""}`,p={name:w,path:`${l}${w}`,last_modified:c,created:c,format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"};break;case"notebook":{const t=await this._incrementCounter("notebook");w=w||`Untitled${t||""}.ipynb`,p={name:w,path:`${l}${w}`,last_modified:c,created:c,format:"json",mimetype:a.JSON,content:g.EMPTY_NB,size:f.encode(JSON.stringify(g.EMPTY_NB)).length,writable:!0,type:"notebook"};break}default:{let e=null!==(i=null==t?void 0:t.ext)&&void 0!==i?i:".txt";e.startsWith(".")||(e=`.${e}`);const n=await this._incrementCounter("file"),s=r.getType(e)||a.OCTET_STREAM;let o;o=r.hasFormat(e,"text")||-1!==s.indexOf("text")?"text":-1!==e.indexOf("json")||-1!==e.indexOf("ipynb")?"json":"base64",w=w||`untitled${n||""}${e}`,p={name:w,path:`${l}${w}`,last_modified:c,created:c,format:o,mimetype:s,content:"",size:0,writable:!0,type:"file"};break}}const y=p.path;return await(await this.storage).setItem(y,p),this._fileChanged.emit({type:"new",oldValue:null,newValue:p}),p}async copy(t,e){let n=s.PathExt.basename(t);for(e=""===e?"":`${s.PathExt.removeSlash(e)}/`;await this.get(`${e}${n}`,{content:!0}).then((()=>!0)).catch((()=>!1));){const t=s.PathExt.extname(n),e=n.replace(t,"");n=`${e} (copy)${t}`}const a=`${e}${n}`;let r=await this.get(t,{content:!0}).catch((()=>null));if(!r)throw Error(`Could not find file with path ${t}`);return r={...r,name:n,path:a},await(await this.storage).setItem(a,r),this._fileChanged.emit({type:"new",oldValue:null,newValue:r}),r}async get(t,e){if(""===(t=decodeURIComponent(t.replace(/^\//,"")))){const e=await this._getFolder(t);if(null===e)throw Error(`Could not find file with path ${t}`);return e}const n=await this.storage,r=await n.getItem(t),i=await this._getServerContents(t,e),o=r||i;if(!o)throw Error(`Could not find content with path ${t}`);if(!(null==e?void 0:e.content))return{size:0,...o,content:null};if("directory"===o.type){const e=new Map;await n.iterate(((n,a)=>{a===`${t}/${n.name}`&&e.set(n.name,n)}));const r=i?i.content:Array.from((await this._getServerDirectory(t)).values());for(const t of r)e.has(t.name)||e.set(t.name,t);const h=[...e.values()];return{name:s.PathExt.basename(t),path:t,last_modified:o.last_modified,created:o.created,format:"json",mimetype:a.JSON,content:h,size:0,writable:!0,type:"directory"}}return o}async rename(t,e){const n=decodeURIComponent(t),a=await this.get(n,{content:!0}).catch((()=>null));if(!a)throw Error(`Could not find file with path ${n}`);const r=(new Date).toISOString(),i=s.PathExt.basename(e),o={...a,name:i,path:e,last_modified:r},h=await this.storage;if(await h.setItem(e,o),await h.removeItem(n),await(await this.checkpoints).removeItem(n),"directory"===a.type){let n;for(n of a.content)await this.rename(s.URLExt.join(t,n.name),s.URLExt.join(e,n.name))}return this._fileChanged.emit({type:"rename",oldValue:{path:t},newValue:o}),o}async save(t,e={}){var n;t=decodeURIComponent(t);const a=s.PathExt.extname(null!==(n=e.name)&&void 0!==n?n:""),i=e.chunk,o=!!i&&(i>1||-1===i);let h=await this.get(t,{content:o}).catch((()=>null));if(h||(h=await this.newUntitled({path:t,ext:a,type:"file"})),!h)throw Error(`Could not find file with path ${t}`);const c=h.content,l=(new Date).toISOString();if(h={...h,...e,last_modified:l},e.content&&"base64"===e.format){const t=!i||-1===i,n=this._handleUploadChunk(e.content,c,o);if(".ipynb"===a){const e=t?JSON.parse(u.decode(this._binaryStringToBytes(n))):n;h={...h,content:e,format:"json",type:"notebook",size:n.length}}else if(r.hasFormat(a,"json")){const e=t?JSON.parse(u.decode(this._binaryStringToBytes(n))):n;h={...h,content:e,format:"json",type:"file",size:n.length}}else if(r.hasFormat(a,"text")){const e=t?u.decode(this._binaryStringToBytes(n)):n;h={...h,content:e,format:"text",type:"file",size:n.length}}else{const e=t?btoa(n):n;h={...h,content:e,format:"base64",type:"file",size:n.length}}}if(h.content)switch(e.format){case"json":h={...h,size:f.encode(JSON.stringify(h.content)).length};break;case"text":h={...h,size:f.encode(h.content).length};break;case"base64":break;default:h={...h,size:0}}else h={...h,size:0};return await(await this.storage).setItem(t,h),this._fileChanged.emit({type:"save",oldValue:null,newValue:h}),h}async delete(t){const e=`${t=decodeURIComponent(t)}/`,n=(await(await this.storage).keys()).filter((n=>n===t||n.startsWith(e)));await Promise.all(n.map(this.forgetPath,this)),this._fileChanged.emit({type:"delete",oldValue:{path:t},newValue:null})}async forgetPath(t){await Promise.all([(await this.storage).removeItem(t),(await this.checkpoints).removeItem(t)])}async createCheckpoint(t){var e;const n=await this.checkpoints;t=decodeURIComponent(t);const a=await this.get(t,{content:!0}).catch((()=>null));if(!a)throw Error(`Could not find file with path ${t}`);const r=(null!==(e=await n.getItem(t))&&void 0!==e?e:[]).filter(Boolean);return r.push(a),r.length>5&&r.splice(0,r.length-5),await n.setItem(t,r),{id:""+(r.length-1),last_modified:a.last_modified}}async listCheckpoints(t){return(await(await this.checkpoints).getItem(t)||[]).filter(Boolean).map(this.normalizeCheckpoint,this)}normalizeCheckpoint(t,e){return{id:e.toString(),last_modified:t.last_modified}}async restoreCheckpoint(t,e){t=decodeURIComponent(t);const n=(await(await this.checkpoints).getItem(t)||[])[parseInt(e)];await(await this.storage).setItem(t,n)}async deleteCheckpoint(t,e){t=decodeURIComponent(t);const n=await(await this.checkpoints).getItem(t)||[],a=parseInt(e);n.splice(a,1),await(await this.checkpoints).setItem(t,n)}_handleUploadChunk(t,e,n){const a=atob(t);return n?e+a:a}_binaryStringToBytes(t){const e=new Uint8Array(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}async _getFolder(t){const e=new Map,n=await this.storage;await n.iterate(((t,n)=>{n.includes("/")||e.set(t.path,t)}));for(const n of(await this._getServerDirectory(t)).values())e.has(n.path)||e.set(n.path,n);return t&&0===e.size?null:{name:"",path:t,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"json",mimetype:a.JSON,content:Array.from(e.values()),size:0,writable:!0,type:"directory"}}async _getServerContents(t,e){const n=s.PathExt.basename(t);let i=(await this._getServerDirectory(s.URLExt.join(t,".."))).get(n);if(!i)return null;if(i=i||{name:n,path:t,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"text",mimetype:a.PLAIN_TEXT,type:"file",writable:!0,size:0,content:""},null==e?void 0:e.content)if("directory"===i.type){const e=await this._getServerDirectory(t);i={...i,content:Array.from(e.values())}}else{const e=s.URLExt.join(s.PageConfig.getBaseUrl(),"files",t),o=await fetch(e);if(!o.ok)return null;const h=i.mimetype||o.headers.get("Content-Type"),c=s.PathExt.extname(n);if("notebook"===i.type||r.hasFormat(c,"json")||-1!==(null==h?void 0:h.indexOf("json"))||t.match(/\.(ipynb|[^/]*json[^/]*)$/)){const t=await o.text();i={...i,content:JSON.parse(t),format:"json",mimetype:i.mimetype||a.JSON,size:f.encode(t).length}}else if(r.hasFormat(c,"text")||-1!==h.indexOf("text")){const t=await o.text();i={...i,content:t,format:"text",mimetype:h||a.PLAIN_TEXT,size:f.encode(t).length}}else{const t=await o.arrayBuffer(),e=new Uint8Array(t);i={...i,content:btoa(e.reduce(this.reduceBytesToString,"")),format:"base64",mimetype:h||a.OCTET_STREAM,size:e.length}}}return i}async _getServerDirectory(t){const e=this._serverContents.get(t)||new Map;if(!this._serverContents.has(t)){const n=s.URLExt.join(s.PageConfig.getBaseUrl(),"api/contents",t,"all.json");try{const t=await fetch(n),a=JSON.parse(await t.text());for(const t of a.content)e.set(t.name,t)}catch(t){console.warn(`don't worry, about ${t}... nothing's broken. If there had been a\n          file at ${n}, you might see some more files.`)}this._serverContents.set(t,e)}return e}async _incrementCounter(t){var e;const n=await this.counters,a=(null!==(e=await n.getItem(t))&&void 0!==e?e:-1)+1;return await n.setItem(t,a),a}}var g;!function(t){t.EMPTY_NB={metadata:{orig_nbformat:4},nbformat_minor:5,nbformat:4,cells:[]}}(g||(g={}));const w=16895,y=33206,_=1,E=2;function S(t){return"node"in t}const P=":",C=4096,v=new TextEncoder,O=new TextDecoder("utf-8"),I={0:!1,1:!0,2:!0,64:!0,65:!0,66:!0,129:!0,193:!0,514:!0,577:!0,578:!0,705:!0,706:!0,1024:!0,1025:!0,1026:!0,1089:!0,1090:!0,1153:!0,1154:!0,1217:!0,1218:!0,4096:!0,4098:!0};class k{constructor(t){this.fs=t}open(t){const e=this.fs.realPath(t.node);this.fs.FS.isFile(t.node.mode)&&(t.file=this.fs.API.get(e))}close(t){if(!this.fs.FS.isFile(t.node.mode)||!t.file)return;const e=this.fs.realPath(t.node),n=t.flags;let a="string"==typeof n?parseInt(n,10):n;a&=8191;let r=!0;a in I&&(r=I[a]),r&&this.fs.API.put(e,t.file),t.file=void 0}read(t,e,n,a,r){if(a<=0||void 0===t.file||r>=(t.file.data.length||0))return 0;const s=Math.min(t.file.data.length-r,a);return e.set(t.file.data.subarray(r,r+s),n),s}write(t,e,n,a,r){var s;if(a<=0||void 0===t.file)return 0;if(t.node.timestamp=Date.now(),r+a>((null===(s=t.file)||void 0===s?void 0:s.data.length)||0)){const e=t.file.data?t.file.data:new Uint8Array;t.file.data=new Uint8Array(r+a),t.file.data.set(e)}return t.file.data.set(e.subarray(n,n+a),r),a}llseek(t,e,n){let a=e;if(n===_)a+=t.position;else if(n===E&&this.fs.FS.isFile(t.node.mode)){if(void 0===t.file)throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EPERM);a+=t.file.data.length}if(a<0)throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EINVAL);return a}}class b{constructor(t){this.fs=t}node(t){return S(t)?t.node:t}getattr(t){const e=this.node(t);return{...this.fs.API.getattr(this.fs.realPath(e)),mode:e.mode,ino:e.id}}setattr(t,e){const n=this.node(t);for(const[t,a]of Object.entries(e))switch(t){case"mode":n.mode=a;break;case"timestamp":n.timestamp=a;break;case"size":{const t=a,e=this.fs.realPath(n);if(this.fs.FS.isFile(n.mode)&&t>=0){const n=this.fs.API.get(e),a=n.data?n.data:new Uint8Array;t!==a.length&&(t<a.length?n.data=n.data.slice(0,t):(n.data=new Uint8Array(t),n.data.set(a)),this.fs.API.put(e,n))}else console.warn("setattr size of",t,"on",n,"not yet implemented");break}default:console.warn("setattr",t,"of",a,"on",n,"not yet implemented")}}lookup(t,e){const n=this.node(t),a=this.fs.PATH.join2(this.fs.realPath(n),e),r=this.fs.API.lookup(a);if(!r.ok)throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.ENOENT);return this.fs.createNode(n,e,r.mode,0)}mknod(t,e,n,a){const r=this.node(t),s=this.fs.PATH.join2(this.fs.realPath(r),e);return this.fs.API.mknod(s,n),this.fs.createNode(r,e,n,a)}rename(t,e,n){const a=this.node(t),r=this.node(e);this.fs.API.rename(a.parent?this.fs.PATH.join2(this.fs.realPath(a.parent),a.name):a.name,this.fs.PATH.join2(this.fs.realPath(r),n)),a.name=n,a.parent=r}unlink(t,e){this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(this.node(t)),e))}rmdir(t,e){this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(this.node(t)),e))}readdir(t){return this.fs.API.readdir(this.fs.realPath(this.node(t)))}symlink(t,e,n){throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EPERM)}readlink(t){throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EPERM)}}class D{constructor(t){this._driveName=t.driveName,this._mountpoint=t.mountpoint,this.FS=t.FS,this.ERRNO_CODES=t.ERRNO_CODES}lookup(t){return this.request({method:"lookup",path:this.normalizePath(t)})}getmode(t){return this.request({method:"getmode",path:this.normalizePath(t)})}mknod(t,e){return this.request({method:"mknod",path:this.normalizePath(t),data:{mode:e}})}rename(t,e){return this.request({method:"rename",path:this.normalizePath(t),data:{newPath:this.normalizePath(e)}})}readdir(t){const e=this.request({method:"readdir",path:this.normalizePath(t)});return e.push("."),e.push(".."),e}rmdir(t){return this.request({method:"rmdir",path:this.normalizePath(t)})}get(t){const e=this.request({method:"get",path:this.normalizePath(t)});if(!e)throw new this.FS.ErrnoError(this.ERRNO_CODES.ENOENT);const n=e.content,a=e.format;switch(a){case"json":case"text":return{data:v.encode(n),format:a};case"base64":{const t=atob(n),e=t.length,r=new Uint8Array(e);for(let n=0;n<e;n++)r[n]=t.charCodeAt(n);return{data:r,format:a}}default:throw new this.FS.ErrnoError(this.ERRNO_CODES.ENOENT)}}put(t,e){switch(e.format){case"json":case"text":return this.request({method:"put",path:this.normalizePath(t),data:{format:e.format,data:O.decode(e.data)}});case"base64":{let n="";for(let t=0;t<e.data.byteLength;t++)n+=String.fromCharCode(e.data[t]);return this.request({method:"put",path:this.normalizePath(t),data:{format:e.format,data:btoa(n)}})}}}getattr(t){const e=this.request({method:"getattr",path:this.normalizePath(t)});return e.atime&&(e.atime=new Date(e.atime)),e.mtime&&(e.mtime=new Date(e.mtime)),e.ctime&&(e.ctime=new Date(e.ctime)),e.size=e.size||0,e}normalizePath(t){return t.startsWith(this._mountpoint)&&(t=t.slice(this._mountpoint.length)),this._driveName&&(t=`${this._driveName}${P}${t}`),t}}class N extends D{constructor(t){super(t),this._baseUrl=t.baseUrl,this._browsingContextId=t.browsingContextId||""}request(t){const e=new XMLHttpRequest;e.open("POST",encodeURI(this.endpoint),!1);const n={data:t,browsingContextId:this._browsingContextId};try{e.send(JSON.stringify(n))}catch(t){console.error(t)}if(e.status>=400)throw new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL);return JSON.parse(e.responseText)}get endpoint(){return`${this._baseUrl}api/drive`}}class x{constructor(t){this.FS=t.FS,this.PATH=t.PATH,this.ERRNO_CODES=t.ERRNO_CODES,this.API=this.createAPI(t),this.driveName=t.driveName,this.node_ops=new b(this),this.stream_ops=new k(this)}createAPI(t){if(!t.browsingContextId||!t.baseUrl)throw new Error("Cannot create service-worker API without current browsingContextId");return new N(t)}mount(t){return this.createNode(null,t.mountpoint,511|w,0)}createNode(t,e,n,a){const r=this.FS;if(!r.isDir(n)&&!r.isFile(n))throw new r.ErrnoError(this.ERRNO_CODES.EINVAL);const s=r.createNode(t,e,n,a);return s.node_ops=this.node_ops,s.stream_ops=this.stream_ops,s}getMode(t){return this.API.getmode(t)}realPath(t){const e=[];let n=t;for(e.push(n.name);n.parent!==n;)n=n.parent,e.push(n.name);return e.reverse(),this.PATH.join.apply(null,e)}}class T{constructor(t){this.contentsManager=t.contentsManager}async processDriveRequest(t){switch(t.method){case"readdir":return this.readdir(t);case"rmdir":return this.rmdir(t);case"rename":return this.rename(t);case"getmode":return this.getmode(t);case"lookup":return this.lookup(t);case"mknod":return this.mknod(t);case"getattr":return this.getattr(t);case"get":return this.get(t);case"put":return this.put(t)}throw`Drive request ${t.method} does not exist.`}async readdir(t){const e=await this.contentsManager.get(t.path,{content:!0});let n=[];return"directory"===e.type&&e.content&&(n=e.content.map((t=>t.name))),n}async rmdir(t){return await this.contentsManager.delete(t.path),null}async rename(t){return await this.contentsManager.rename(t.path,t.data.newPath),null}async getmode(t){let e;return e="directory"===(await this.contentsManager.get(t.path)).type?w:y,e}async lookup(t){let e;try{e={ok:!0,mode:"directory"===(await this.contentsManager.get(t.path)).type?w:y}}catch(t){e={ok:!1}}return e}async mknod(t){const e=await this.contentsManager.newUntitled({path:s.PathExt.dirname(t.path),type:t.data.mode===w?"directory":"file",ext:s.PathExt.extname(t.path)});return await this.contentsManager.rename(e.path,t.path),null}async getattr(t){const e=await this.contentsManager.get(t.path),n=new Date(0).toISOString();return{dev:1,nlink:1,uid:0,gid:0,rdev:0,size:e.size||0,blksize:C,blocks:Math.ceil(e.size||0/C),atime:e.last_modified||n,mtime:e.last_modified||n,ctime:e.created||n,timestamp:0}}async get(t){const e=await this.contentsManager.get(t.path,{content:!0});let n;return"directory"!==e.type&&(n={content:"json"===e.format?JSON.stringify(e.content):e.content,format:e.format}),n}async put(t){return await this.contentsManager.save(t.path,{content:"json"===t.data.format?JSON.parse(t.data.data):t.data.data,type:"file",format:t.data.format}),null}}}}]);
//# sourceMappingURL=4905.f4187e3.js.map