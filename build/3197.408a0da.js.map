{"version":3,"file":"3197.408a0da.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-2NYFTIL2.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-2O5ZK7RR.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/grammar-loader.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-7PKI6E2E.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-C4OEIS7N.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EXZZNE6F.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-ROXG7S4E.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-V4Q32G6S.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSlice.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/drop.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/assign.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/pickBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/isRegExp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseIsRegExp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/model.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/uniq.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSome.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/some.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/includes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_arrayEvery.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseEvery.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/every.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/constants.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/negate.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/reject.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/indexOf.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/difference.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseDifference.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/compact.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/head.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/print.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/timer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_arrayAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/groupBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_createAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/dropRight.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/atn.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/dfa.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/uniqBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/cst-node-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/langium-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/parser-builder-base.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/promise-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/documents.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/linker.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/name-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/uri-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/validation/validation-registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/validation/document-validator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/references.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/collections.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope-computation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/caching.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/serializer/json-serializer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/service-registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/ast-descriptions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/ast-node-locator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/disposable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/configuration.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/document-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/index-manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/workspace-manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/lexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/jsdoc.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/documentation-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/comment-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/async-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/workspace-lock.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/serializer/hydrator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/default-module.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/languages/grammar-config.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/langium-parser-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/completion-parser-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/dependency-injection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/languages/generated/ast.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/token-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/value-converter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/syntax-tree.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/ast-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/cst-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/errors.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/grammar-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/regexp-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/stream.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/file-system-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseExtremum.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseLt.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSet.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_basePickBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/clone.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/defaults.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/findIndex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/find.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_createFind.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/flatMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/flatten.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseHas.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/has.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/isString.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/last.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/map.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/min.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_trimmedEndIndex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseTrim.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toNumber.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toFinite.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toInteger.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/process/browser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/events.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/is.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-uri/lib/esm/index.mjs"],"sourcesContent":["export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Common = \"Common\";\nfunction isCommon(item) {\n  return reflection.isInstance(item, Common);\n}\n__name(isCommon, \"isCommon\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Direction = \"Direction\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, Commit, Common, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Junction, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Service, Statement];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Common: {\n        return {\n          name: Common,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_LABEL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]+\\\\\"/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_VALUE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ID\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TEXT_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\(\\\\\"[^\\\\\"]+\\\\\"\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+(?=\\\\\\\\s)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@12\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@12\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9\\\\\\\\-_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  isCommon,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet-beta\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-2NYFTIL2.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-EXZZNE6F.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-V4Q32G6S.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-ROXG7S4E.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-C4OEIS7N.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-2O5ZK7RR.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-7PKI6E2E.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-4N47QTOZ.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-KVYON367.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-R6RNRRYF.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-4AB2E3PP.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-O2Q2CXLX.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-MK3ICKWK.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map"],"names":["cc","char","charCodeAt","insertToSet","item","set","Array","isArray","forEach","subItem","push","addFlag","flagObj","flagKey","ASSERT_EXISTS","obj","undefined","Error","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","i","wordCharCodes","concat","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","constructor","this","idx","input","groupIdx","saveState","restoreState","newState","pattern","consumeChar","value","disjunction","flags","type","loc","begin","end","length","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","quantifier","isBacktracking","range","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","test","toUpperCase","parseHexDigits","classPatternCharacterAtom","isClassAtom","from","classAtom","isRangeDash","to","classEscape","capturing","groupAst","number","parseInt","nextChar","howMuch","isAtom","prevState","e","howMany","hexString","hexChar","BaseRegExpVisitor","visitChildren","node","key","child","hasOwnProperty","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","GitGraphTokenBuilder","super","GitGraphModule","parser","TokenBuilder","ValueConverter","createGitGraphServices","context","shared","GitGraph","ServiceRegistry","register","RadarTokenBuilder","RadarModule","createRadarServices","Radar","minimalGrammarModule","Grammar","LanguageMetaData","caseInsensitive","fileExtensions","languageId","minimalSharedGrammarModule","AstReflection","ast","loadGrammarFromJson","json","_a","services","grammar","createMinimalGrammarServices","astNode","serializer","JsonSerializer","deserialize","workspace","LangiumDocumentFactory","fromModel","parse","name","__defProp","Object","defineProperty","__name","target","configurable","Statement","Architecture","reflection","isInstance","Axis","Branch","Checkout","CherryPicking","Commit","Common","Curve","Edge","Entry","Group","Info","Junction","Merge","Option","Packet","PacketBlock","Pie","PieSection","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","loadedRadarGrammar","Service","Direction","MermaidAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","container","$type","property","getTypeMetaData","properties","defaultValue","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","RadarGrammar","InfoLanguageMetaData","mode","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","RadarGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","rule","cstNode","runCommonConverter","runCustomConverter","_cstNode","regex","match","exec","trim","replace","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","Set","buildKeywordTokens","rules","terminalTokens","options","tokenTypes","tokenType","has","PATTERN","RegExp","toString","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","createArchitectureServices","InfoTokenBuilder","InfoModule","createInfoServices","PieTokenBuilder","PieValueConverter","PieModule","createPieServices","PacketTokenBuilder","PacketModule","createPacketServices","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices2","gitGraph","createGitGraphServices2","radar","createRadarServices2","diagramType","text","initializer","result","lexerErrors","parserErrors","MermaidParseError","map","err","message","join","toFastProperties","toBecomeFast","FakeConstructor","prototype","fakeInstance","fakeAccess","bar","array","start","index","n","guard","toInteger","object","source","isArrayLike","keys","call","predicate","props","prop","path","nodeIsRegExp","isRegExp","isObjectLike","AbstractProduction","definition","_definition","accept","visitor","prod","NonTerminal","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","isString","label","separator","terminalType","serializedTerminal","tokType","LABEL","terminalLabel","RestWalker","walk","prevRest","subProd","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","terminal","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","collection","func","nativeMax","Math","max","fromIndex","values","indexOf","isOptionalProd","alreadyVisited","getProductionDslName","first","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","flatten","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","args","arguments","apply","difference","isArrayLikeObject","iteratee","comparator","includes","isCommon","valuesLength","outer","computed","valuesIndex","resIndex","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","code","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","String","fromCharCode","upperChar","lowerChar","toLowerCase","handleIgnoreCase","findCode","setNode","targetCharCodes","find","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","end_of_input","start_of_input","addStartOfInput","addStickyFlag","isCustomPattern","isFunction","isShortPattern","LineTerminatorOptimizedTester","len","lastIndex","c","checkLineBreaksIssues","lineTerminatorCharCodes","issue","LexerDefinitionErrorType","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","getCharCodes","charsOrCodes","numOrString","addToMapOfArrays","charCodeToOptimizedIdxMap","charCode","timer","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","tokenTypeIdx","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","token","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","categories","searching","currTokType","CATEGORIES","newCategories","isEmpty","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","fullText","startOffset","line","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","positionTracking","lineTerminatorsPattern","lineTerminatorCharacters","safeMode","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","freeze","Lexer","lexerDefinition","config","lexerDefinitionErrors","lexerDefinitionWarning","patternIdxToConfig","charCodeToPatternIdxToConfig","modes","emptyGroups","trackStartLines","trackEndLines","hasCustom","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","trackLines","errors","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","isUndefined","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","longerAlt","LONGER_ALT","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","currType","NA","terminatorCharCodes","currIssue","details","buildLineBreakIssueMessage","warningDescriptor","LINE_BREAKS","NO_LINE_BREAKS_FLAGS","performWarningRuntimeChecks","allModeNames","currModDef","currModName","validModesNames","missingResult","tokenTypesWithMissingPattern","filter","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","startAnchorVisitor","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","multiline","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","reduce","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","clazz","GROUP","SKIPPED","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","validatePatterns","currAnalyzeResult","tracer","defaults","useSticky","debug","action","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","currPattern","regExpSource","escapedRegExpString","wrappedRegExp","groupName","longerAltType","acc","x","canLineTerminator","isCustom","short","pop","canBeOptimized","optimizedIdx","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","analyzeTokenTypes","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","offset","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","startLine","startColumn","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","endLine","endColumn","oldColumn","endOffset","tokenVector","tokenToAdd","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GAstVisitor","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ref","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","alternatives","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","size","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","identifyProductionForDuplicates","getExtraProductionArgument","OccurrenceValidationCollector","allProductions","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","flatMap","currRefRule","firstProd","currSubDef","isFirstOptional","hasMore","rest","OrCollector","alternations","RepetitionCollector","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","currRuleName","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","validateAmbiguousAlternationAlternatives","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","orCollector","ors","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","other","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","topLevelRules","collectorVisitor","allRuleProductions","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","reset","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","NAME","defineNameProp","nameValue","enumerable","writable","defaultVisit","ctx","param","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","children","CstVisitorDefinitionError","RECORDING_NULL_OBJECT","description","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","className","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","actualOptions","topRulesTable","topLevels","refResolver","definitionErrors","validationErrors","tokensMap","duplicateErrors","productionGroups","duplicates","currGroup","currDuplicates","defError","DUPLICATE_PRODUCTIONS","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","Map","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","get","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","ruleNames","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","createBaseSemanticVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","buildATNKey","ATN_BASIC","ATN_PLUS_BLOCK_START","ATN_STAR_BLOCK_START","ATN_RULE_STOP","ATN_BLOCK_END","ATN_STAR_LOOP_BACK","ATN_STAR_LOOP_ENTRY","ATN_PLUS_LOOP_BACK","ATN_LOOP_END","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","atn","production","tokenRef","currentRule","nonTerminal","ruleToStartState","left","right","addTransition","ruleRef","defineDecisionState","makeAlts","optional","handle","epsilon","decisionMap","block","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","next","removeState","makeBlock","sep","blkStart","blkEnd","loop","loopback","entry","loopEnd","state","decisionStates","decision","buildRuleHandle","stop","ruleToStopState","a","b","partial","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","states","splice","DFA_ERROR","ATNConfigSet","configs","finalize","add","getATNConfigKey","elements","stack","createDFACache","startState","predicateSet","existing","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","ruleLength","createRuleStartAndStopATNStates","ruleBlock","createATN","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","g","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","atnState","numberOfTransitions","closure","computeStartState","performLookahead","s0","previousD","d","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","lookahead","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","min","reportLookaheadAmbiguity","buildAmbiguityError","current","nextTransitions","actualToken","possibleTokenTypes","tokenPath","mapKey","p","atnStack","getEpsilonTarget","DocumentUri","URI","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","Is","MIN_VALUE","MAX_VALUE","character","Number","candidate","objectLiteral","one","two","three","four","uri","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","boolean","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","version","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Boolean","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","parent","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","Type","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","slice","leftIdx","rightIdx","ret","content","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","root","buildCompositeNode","feature","compositeNode","CompositeCstNodeImpl","grammarSource","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","addHiddenNodes","nodes","added","unshift","construct","$cstNode","AbstractCstNode","hidden","_astNode","element","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","count","_text","DatatypeSymbol","Symbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","callback","wrapOption","wrapMany","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","bind","mainRule","fragment","explicit","lexerResult","clear","lexerReport","report","createNode","extractHiddenTokens","hiddenTokens","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","newItem","assignWithoutOverride","buildReference","existingValue","entries","newValue","targetCstNode","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","lastIndexOf","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","stream","buildElement","buildRules","ignoreGuard","method","keyword","buildKeyword","actionType","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getToken","$refText","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","wrapped","wrap","groupState","trackedAlternatives","delete","buildUnorderedGroup","buildGroup","cardinality","condition","true","guardCondition","crossRef","terminalRule","assignTerminal","$container","getRuleName","lastTick","isOperationCancelled","interruptAndCheck","CancellationToken","None","performance","now","Promise","resolve","setImmediate","setTimeout","isCancellationRequested","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","isAtLineStart","textOffset","getWellformedEdit","spans","substr","DocumentState","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","$document","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","all","addDocument","uriString","getDocument","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","unlink","Changed","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","reference","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","getAstNodePath","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","UriUtils","ValidationCategory","DocumentValidator","basename","dirname","extname","joinPath","resolvePath","equals","relative","fromPath","toPath","fromParts","split","toParts","repeat","normalize","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","nodeElem","nameNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","segment","local","MultiMap","sum","addAll","callbackfn","iterator","flat","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exports","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","dispose","throwIfDisposed","SimpleCache","cache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onBuildPhase","onUpdate","_changed","deleted","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","s","nonNullable","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_c","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","startsWith","propertyAssignments","containerProperty","containerIndex","propertyName","reviveReference","mutable","$containerProperty","$containerIndex","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","ext","singleton","hasServices","diagnosticData","ValidationRegistry","entriesBefore","entriesAfter","checksRecord","thisObj","category","callbacks","wrapValidationException","addEntry","handleException","functionality","messageContext","getAllSubTypes","getChecks","checks","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","some","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","_options","lexerDiagnostics","lexerDiagnostic","diagnostic","toDiagnosticSeverity","toDiagnosticData","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","getDiagnosticRange","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","previousValue","currentValue","propertyIndex","arrayIndex","Disposable","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","Emitter","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","fire","getConfiguration","sectionName","onConfigurationSectionUpdate","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deletedUri","remove","changedUri","newDocument","allChangedUris","toSet","shouldRelink","rebuildDocuments","sortDocuments","Linked","toArray","listener","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","onDocumentPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","onCancellationRequested","listenersCopy","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","buildTokens","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","flushLexingReport","isIMultiModeLexerDefinition","res","isTokenTypeArray","getLines","tagRegex","inlineTagRegex","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","skipWhitespace","lastCharacter","parseJSDocElement","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","lines","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOptions","normalizeOption","escaped","JSDocCommentImpl","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","isJSDoc","firstRegex","lastRegex","opts","currentLine","currentCharacter","tagMatch","fullMatch","inlineTagMatches","matchAll","startPosition","parseJSDocComment","parseJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","with","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","multilineCommentRules","DefaultAsyncParser","syncParser","_cancelToken","DefaultWorkspaceLock","previousTokenSource","CancellationTokenSource","writeQueue","readQueue","done","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","cancel","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","prepareLangiumParser","createLangiumParser","CompletionParser","createCompletionParser","References","Hydrator","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","_","ownKeys","__requested__","cause","value2","value1","AbstractRule","AbstractType","Condition","TypeDefinition","ValueLiteral","AbstractElement","isAbstractElement","ArrayLiteral","ArrayType","BooleanLiteral","isBooleanLiteral","Conjunction","isConjunction","Disjunction","isDisjunction","GrammarImport","InferredType","isInferredType","isInterface","NamedArgument","Negation","isNegation","NumberLiteral","ParameterReference","isParameterReference","ParserRule","isParserRule","ReferenceType","ReturnType","isReturnType","SimpleType","isSimpleType","StringLiteral","TerminalRule","isTerminalRule","isType","TypeAttribute","UnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","isCharacterRange","CrossReference","isCrossReference","EndOfFile","isEndOfFile","isGroup","isKeyword","NegatedToken","isNegatedToken","RegexToken","isRegexToken","RuleCall","isRuleCall","TerminalAlternatives","isTerminalAlternatives","TerminalGroup","isTerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","isUntilToken","Wildcard","isWildcard","LangiumGrammarAstReflection","DefaultTokenBuilder","reachableRules","buildTerminalTokens","terminalToken","popDiagnostics","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","distinct","sort","buildKeywordToken","keywordPattern","buildKeywordPattern","findLongerAlt","longerAlts","DefaultValueConverter","convertInt","convertString","convertID","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","isAstNode","isReference","isAstNodeDescription","isLinkingError","AbstractAstReflection","subtypes","allSubtypes","nested","allTypes","types","possibleSubType","isCompositeCstNode","isLeafCstNode","isRootCstNode","linkContentToContainer","getContainerOfType","typePredicate","findRootNode","streamContents","keyIndex","isAstNodeInRange","streamAllContents","streamAst","includeRoot","nodeRange","streamReferences","assignMandatoryProperties","typeMetaData","genericNode","copyDefaultValue","propertyType","RangeComparison","streamCst","isChildNode","tokenToRange","toDocumentSegment","inRange","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","Outside","compareRange","DefaultNameRegexp","findCommentNode","commentNames","getPreviousNode","isCommentNode","findIndex","ErrorWithLocation","assertUnreachable","getAllReachableRules","allTerminals","entryRule","getEntryRule","topMostRules","getHiddenRules","ruleDfs","visitedSet","refRule","getCrossReferenceTerminal","nameAssigment","findNameAssignment","isCommentTerminal","terminalRegex","findNodesForProperty","findNodesForPropertyInternal","findNodeForProperty","nodeFeature","findNodeForKeyword","treeIterator","keywordNodes","childNode","prune","findNodesForKeywordInternal","findAssignment","startNode","findNameAssignmentInternal","go","refType","childAssignment","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","getActionType","getRuleType","u","abstractElementToRegex","flagText","WILDCARD","withCardinality","keywordToRegex","until","negate","lastSlash","regexFlags","NEWLINE_REGEXP","regexpParser","TerminalRegExpVisitor","isStarting","endRegexpStack","endRegex","startRegexp","escapedChar","escapeRegExp","isMultilineComment","regexp","whitespaceCharacters","isWhitespace","ws","getCaseInsensitivePattern","partialMatches","re","process","tmp","appendRaw","nbChars","appendOptional","partialRegExp","StreamImpl","startFn","nextFn","toMap","keyFn","valueFn","entryStream","firstDone","DONE_RESULT","addSeparator","searchElement","initialValue","reduceRight","recursiveReduce","mapped","isIterable","depth","head","tail","skipCount","limit","maxSize","by","internalState","exclude","otherKeySet","ownKey","EMPTY_STREAM","collections","collIndex","arrIndex","TreeStreamImpl","iterators","pruned","Reduction","product","EmptyFileSystemProvider","EmptyFileSystem","customizer","objValue","paths","objectProto","sources","propsIndex","propsLength","findIndexFunc","iterable","reWhitespace","reTrimStart","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isSymbol","valueOf","isBinary","remainder","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","nextTick","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","ral_1","events_1","Cancelled","shortcutEvent","default","MutableToken","_isCancelled","_emitter","_token","_disposable","CallbackList","bucket","_callbacks","_contexts","foundCallbackWithDifferentContext","invoke","contexts","_event","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","stringArray","elem","_ral","RAL","install","ral","LIB","r","o","h","isAbsolute","f","l","_makeLong","format","base","delimiter","win32","posix","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w"],"sourceRoot":""}